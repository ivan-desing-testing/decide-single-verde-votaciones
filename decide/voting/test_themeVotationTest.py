from django.test import TestCase
from django.contrib.staticfiles.testing import StaticLiveServerTestCase

from selenium import webdriver
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.keys import Keys

from base.tests import BaseTestCase


class TestThemeVotationTest(StaticLiveServerTestCase):
     # def setup_method(self, method):
     #      self.driver = webdriver.Chrome()
     #      self.vars = {}
          
     # def teardown_method(self, method):
     #      self.driver.quit()

     def setUp(self):
       #Load base test functionality for decide
          self.base = BaseTestCase()
          self.base.setUp()
          self.usernameDecide = 'admin'
          self.passwordDecide = 'adminpass'

          options = webdriver.FirefoxOptions()
          options.headless = True
          driver = webdriver.Firefox(options=options)

          super().setUp()

     def tearDown(self):
          super().tearDown()
          self.driver.quit()

          self.base.tearDown()
  
     def test_themeVotationTest(self):
          self.driver.get("http://localhost:8000/admin/")
          self.driver.set_window_size(957, 727)
          self.driver.find_element(By.ID, "id_username").send_keys(self.usernameDecide)
          self.driver.find_element(By.ID, "id_password").send_keys(self.passwordDecide)
          self.driver.find_element(By.CSS_SELECTOR, ".submit-row > input").click()
          self.driver.find_element(By.LINK_TEXT, "Votings").click()
          self.driver.find_element(By.LINK_TEXT, "Electoral").click()
          self.driver.find_element(By.CSS_SELECTOR, ".addlink").click()
          self.driver.find_element(By.ID, "id_name").click()
          self.driver.find_element(By.ID, "id_name").send_keys("PruebaSelenium")
          self.driver.find_element(By.ID, "id_name").click()
          self.driver.find_element(By.ID, "id_name").click()
          self.driver.find_element(By.ID, "id_name").send_keys("PruebaSeleniumuno")
          self.driver.find_element(By.ID, "id_preference").click()
          dropdown = self.driver.find_element(By.ID, "id_preference")
          dropdown.find_element(By.XPATH, "//option[. = 'High']").click()
          self.driver.find_element(By.ID, "id_preference").click()
          self.driver.find_element(By.ID, "id_question").click()
          dropdown = self.driver.find_element(By.ID, "id_question")
          dropdown.find_element(By.XPATH, "//option[. = '¿Aprobaremos EGC?']").click()
          self.driver.find_element(By.ID, "id_question").click()
          dropdown = self.driver.find_element(By.ID, "id_auths")
          dropdown.find_element(By.XPATH, "//option[. = 'http://localhost:8000']").click()
          self.driver.find_element(By.NAME, "_save").click()
          element = self.driver.find_element(By.ID, "id_themeVotation")
          locator = "option[@value='{}']".format(element.get_attribute("value"))
          selected_text = element.find_element(By.XPATH, locator).text
          self.assertTrue(selected_text == "---------")
          self.driver.find_element(By.ID, "id_themeVotation").click()
          dropdown = self.driver.find_element(By.ID, "id_themeVotation")
          dropdown.find_element(By.XPATH, "//option[. = 'Electoral']").click()
          self.driver.find_element(By.ID, "id_themeVotation").click()
          self.driver.find_element(By.NAME, "_save").click()
          self.driver.find_element(By.LINK_TEXT, "Electoral").click()
          self.driver.find_element(By.CSS_SELECTOR, ".row1:nth-child(1) > .field-themeVotation").click()
          self.assertTrue(self.driver.find_element(By.CSS_SELECTOR, ".row1:nth-child(1) > .field-themeVotation").text == "Electoral")
          self.driver.find_element(By.CSS_SELECTOR, "ul:nth-child(5) > li:nth-child(1) > a").click()
          self.driver.find_element(By.CSS_SELECTOR, ".addlink").click()
          self.driver.find_element(By.ID, "id_name").click()
          self.driver.find_element(By.ID, "id_name").send_keys("PruebaSelenium1")
          self.driver.find_element(By.ID, "id_name").send_keys("PruebaSeleniumdos")
          self.driver.find_element(By.ID, "id_preference").click()
          dropdown = self.driver.find_element(By.ID, "id_preference")
          dropdown.find_element(By.XPATH, "//option[. = 'Mid']").click()
          self.driver.find_element(By.ID, "id_preference").click()
          self.driver.find_element(By.ID, "id_question").click()
          self.driver.find_element(By.ID, "id_themeVotation").click()
          dropdown = self.driver.find_element(By.ID, "id_themeVotation")
          dropdown.find_element(By.XPATH, "//option[. = 'Self-interest']").click()
          self.driver.find_element(By.ID, "id_themeVotation").click()
          self.driver.find_element(By.ID, "id_question").click()
          dropdown = self.driver.find_element(By.ID, "id_question")
          dropdown.find_element(By.XPATH, "//option[. = '¿Os gusta el deporte?']").click()
          self.driver.find_element(By.ID, "id_question").click()
          dropdown = self.driver.find_element(By.ID, "id_auths")
          dropdown.find_element(By.XPATH, "//option[. = 'http://localhost:8000']").click()
          element = self.driver.find_element(By.ID, "id_themeVotation")
          locator = "option[@value='{}']".format(element.get_attribute("value"))
          selected_text = element.find_element(By.XPATH, locator).text
          self.assertTrue(selected_text == "Self-interest")
          self.driver.find_element(By.NAME, "_save").click()
          self.driver.find_element(By.LINK_TEXT, "Self-interest").click()
          self.driver.find_element(By.CSS_SELECTOR, ".row1:nth-child(1) > .field-themeVotation").click()
          self.assertTrue(self.driver.find_element(By.CSS_SELECTOR, ".row1:nth-child(1) > .field-themeVotation").text == "Self-interest")
          self.driver.find_element(By.CSS_SELECTOR, "ul:nth-child(5) > li:nth-child(1) > a").click()
          self.driver.find_element(By.CSS_SELECTOR, ".addlink").click()
          self.driver.find_element(By.ID, "id_name").click()
          self.driver.find_element(By.ID, "id_name").send_keys("PruebaSelenium1")
          self.driver.find_element(By.ID, "id_name").send_keys("PruebaSeleniumtres")
          self.driver.find_element(By.ID, "id_preference").click()
          dropdown = self.driver.find_element(By.ID, "id_preference")
          dropdown.find_element(By.XPATH, "//option[. = 'Mid']").click()
          self.driver.find_element(By.ID, "id_preference").click()
          self.driver.find_element(By.ID, "id_themeVotation").click()
          dropdown = self.driver.find_element(By.ID, "id_themeVotation")
          dropdown.find_element(By.XPATH, "//option[. = 'Knowledge']").click()
          self.driver.find_element(By.ID, "id_themeVotation").click()
          self.driver.find_element(By.ID, "id_question").click()
          dropdown = self.driver.find_element(By.ID, "id_question")
          dropdown.find_element(By.XPATH, "//option[. = 'Habéis trabajado con Python en algún proyecto']").click()
          self.driver.find_element(By.ID, "id_question").click()
          dropdown = self.driver.find_element(By.ID, "id_auths")
          dropdown.find_element(By.XPATH, "//option[. = 'http://localhost:8000']").click()
          self.driver.find_element(By.NAME, "_save").click()
          self.driver.find_element(By.LINK_TEXT, "Knowledge").click()
          self.driver.find_element(By.CSS_SELECTOR, ".row1:nth-child(1) > .field-themeVotation").click()
          self.assertTrue(self.driver.find_element(By.CSS_SELECTOR, ".row1:nth-child(1) > .field-themeVotation").text == "Knowledge")
          self.driver.find_element(By.CSS_SELECTOR, "ul:nth-child(5) > li:nth-child(1) > a").click()
          self.driver.find_element(By.CSS_SELECTOR, ".addlink").click()
          self.driver.find_element(By.ID, "id_name").click()
          self.driver.find_element(By.ID, "id_name").send_keys("PruebaSelenium")
          self.driver.find_element(By.ID, "id_name").send_keys("PruebaSeleniumcuatro")
          self.driver.find_element(By.ID, "id_themeVotation").click()
          dropdown = self.driver.find_element(By.ID, "id_themeVotation")
          dropdown.find_element(By.XPATH, "//option[. = 'Testing']").click()
          self.driver.find_element(By.ID, "id_themeVotation").click()
          self.driver.find_element(By.ID, "id_preference").click()
          dropdown = self.driver.find_element(By.ID, "id_preference")
          dropdown.find_element(By.XPATH, "//option[. = 'High']").click()
          self.driver.find_element(By.ID, "id_preference").click()
          self.driver.find_element(By.ID, "id_question").click()
          dropdown = self.driver.find_element(By.ID, "id_question")
          dropdown.find_element(By.XPATH, "//option[. = '¿Os sentís agusto con los compañeros de trabajo?']").click()
          self.driver.find_element(By.ID, "id_question").click()
          dropdown = self.driver.find_element(By.ID, "id_auths")
          dropdown.find_element(By.XPATH, "//option[. = 'http://localhost:8000']").click()
          element = self.driver.find_element(By.ID, "id_themeVotation")
          locator = "option[@value='{}']".format(element.get_attribute("value"))
          selected_text = element.find_element(By.XPATH, locator).text
          self.assertTrue(selected_text == "Testing")
          self.driver.find_element(By.NAME, "_save").click()
          self.driver.find_element(By.LINK_TEXT, "Testing").click()
          self.driver.find_element(By.CSS_SELECTOR, ".row1:nth-child(1) > .field-themeVotation").click()
          self.assertTrue(self.driver.find_element(By.CSS_SELECTOR, ".row1:nth-child(1) > .field-themeVotation").text == "Testing")
          self.driver.find_element(By.CSS_SELECTOR, "ul:nth-child(5) > li:nth-child(1) > a").click()
          self.driver.find_element(By.CSS_SELECTOR, ".addlink").click()
          self.driver.find_element(By.ID, "id_name").click()
          self.driver.find_element(By.ID, "id_name").send_keys("PruebaSelenium")
          self.driver.find_element(By.ID, "id_name").send_keys("PruebaSeleniumcinco")
          self.driver.find_element(By.ID, "id_themeVotation").click()
          dropdown = self.driver.find_element(By.ID, "id_themeVotation")
          dropdown.find_element(By.XPATH, "//option[. = 'Survey']").click()
          self.driver.find_element(By.ID, "id_themeVotation").click()
          self.driver.find_element(By.ID, "id_preference").click()
          dropdown = self.driver.find_element(By.ID, "id_preference")
          dropdown.find_element(By.XPATH, "//option[. = 'Low']").click()
          self.driver.find_element(By.ID, "id_preference").click()
          self.driver.find_element(By.ID, "id_question").click()
          dropdown = self.driver.find_element(By.ID, "id_question")
          dropdown.find_element(By.XPATH, "//option[. = '¿Os gusta el deporte?']").click()
          self.driver.find_element(By.ID, "id_question").click()
          dropdown = self.driver.find_element(By.ID, "id_auths")
          dropdown.find_element(By.XPATH, "//option[. = 'http://localhost:8000']").click()
          self.driver.find_element(By.NAME, "_save").click()
          self.driver.find_element(By.LINK_TEXT, "Survey").click()
          self.driver.find_element(By.CSS_SELECTOR, ".row1:nth-child(1) > .field-themeVotation").click()
          self.assertTrue(self.driver.find_element(By.CSS_SELECTOR, ".row1:nth-child(1) > .field-themeVotation").text == "Survey")
          self.driver.find_element(By.CSS_SELECTOR, "ul:nth-child(5) > li:nth-child(1) > a").click()
          self.driver.find_element(By.NAME, "_selected_action").click()
          self.driver.find_element(By.CSS_SELECTOR, ".row2:nth-child(2) .action-select").click()
          self.driver.find_element(By.CSS_SELECTOR, ".row1:nth-child(3) .action-select").click()
          self.driver.find_element(By.CSS_SELECTOR, ".row2:nth-child(4) > .action-checkbox").click()
          self.driver.find_element(By.CSS_SELECTOR, ".row2:nth-child(4) .action-select").click()
          self.driver.find_element(By.CSS_SELECTOR, ".row1:nth-child(5) .action-select").click()
          self.driver.find_element(By.NAME, "action").click()
          dropdown = self.driver.find_element(By.NAME, "action")
          dropdown.find_element(By.XPATH, "//option[. = 'Stop']").click()
          self.driver.find_element(By.NAME, "action").click()
          self.driver.find_element(By.NAME, "action").click()
          dropdown = self.driver.find_element(By.NAME, "action")
          dropdown.find_element(By.XPATH, "//option[. = 'Delete selected votings']").click()
          self.driver.find_element(By.NAME, "action").click()
          self.driver.find_element(By.NAME, "action").click()
          dropdown = self.driver.find_element(By.NAME, "action")
          dropdown.find_element(By.XPATH, "//option[. = 'Start']").click()
          self.driver.find_element(By.NAME, "action").click()
          self.driver.find_element(By.NAME, "index").click()
          self.driver.find_element(By.NAME, "action").click()
          self.driver.find_element(By.NAME, "_selected_action").click()
          self.driver.find_element(By.CSS_SELECTOR, ".row2:nth-child(2) .action-select").click()
          self.driver.find_element(By.CSS_SELECTOR, ".row1:nth-child(3) > .action-checkbox").click()
          self.driver.find_element(By.CSS_SELECTOR, ".row1:nth-child(3) .action-select").click()
          self.driver.find_element(By.CSS_SELECTOR, ".row2:nth-child(4) .action-select").click()
          self.driver.find_element(By.CSS_SELECTOR, ".row1:nth-child(5) .action-select").click()
          self.driver.find_element(By.CSS_SELECTOR, ".row2:nth-child(6) .action-select").click()
          self.driver.find_element(By.CSS_SELECTOR, ".row2:nth-child(6) .action-select").click()
          self.driver.find_element(By.NAME, "action").click()
          dropdown = self.driver.find_element(By.NAME, "action")
          dropdown.find_element(By.XPATH, "//option[. = 'Stop']").click()
          self.driver.find_element(By.NAME, "action").click()
          self.driver.find_element(By.NAME, "index").click()
          self.driver.find_element(By.NAME, "action").click()
          self.driver.find_element(By.NAME, "action").click()
          self.driver.find_element(By.NAME, "_selected_action").click()
          self.driver.find_element(By.CSS_SELECTOR, ".row2:nth-child(2) .action-select").click()
          self.driver.find_element(By.CSS_SELECTOR, ".row1:nth-child(3) .action-select").click()
          self.driver.find_element(By.CSS_SELECTOR, ".row2:nth-child(4) .action-select").click()
          self.driver.find_element(By.CSS_SELECTOR, ".row1:nth-child(5) .action-select").click()
          self.driver.find_element(By.NAME, "action").click()
          dropdown = self.driver.find_element(By.NAME, "action")
          dropdown.find_element(By.XPATH, "//option[. = 'Delete selected votings']").click()
          self.driver.find_element(By.NAME, "action").click()
          self.driver.find_element(By.NAME, "index").click()
          self.driver.find_element(By.CSS_SELECTOR, "input:nth-child(8)").click()
  
